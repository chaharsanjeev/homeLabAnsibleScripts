---
- hosts: all
  become: true
  tasks:
  - name: Delete Script if Present
    register: reg_a
    ignore_errors: True
    ansible.builtin.file:
      path: /tmp/cleanLinuxLogs.sh
      state: absent
      
  - name: Download Script from Repository
    register: reg_b
    ignore_errors: False
    get_url: 
      url: https://raw.githubusercontent.com/chaharsanjeev/homeLabAnsibleScripts/main/cleanLinuxLogs.sh
      dest: /tmp/cleanLinuxLogs.sh

  - name: Change Script Permission For Execute
    register: reg_c
    ignore_errors: False
    ansible.builtin.file:
      path: /tmp/cleanLinuxLogs.sh
      mode: '7777'
    
  - name: Execute Clean Logs Script
    register: reg_d
    ignore_errors: False
    shell: /tmp/cleanLinuxLogs.sh

  - name: Delete Clean Logs Script
    register: reg_e
    ignore_errors: False
    file: 
      path: /tmp/cleanLinuxLogs.sh 
      state: absent
  
  - name: Update all Installed Packages
    ignore_errors: True
    apt:
      name: '*'
      state: latest
      update_cache: yes
      only_upgrade: yes
    register: apt_update_status

  - name: Send Notify to Telegram
    community.general.telegram:
      token: "{{telegraph_token}}"
      api_args:
        chat_id: "{{telegraph_chatid}}"
        parse_mode: "markdown"
        text: "[Server Name - {{ ansible_hostname }}]  : {{apt_update_status}}"
        disable_web_page_preview: true
        disable_notification: False
  

  - name: Remove Packages Not Needed
    register: reg_g
    ignore_errors: False
    apt:
      autoremove: yes
      autoclean: yes

  - name: Check If Reboot Required
    stat:
      path: /var/run/reboot-required
    register: reboot_required_file

  - name: Sending an e-mail using Gmail SMTP servers
    community.general.mail:
      sender: "HomeRack"
      host: "{{smtp_host}}"
      port: 587
      username: "{{smtp_username}}"
      password: "{{smtp_app_password}}"
      to: "{{alert_emailAddress}}"
      subject: HomeRack Machine Reboot Required [Server Name - {{ ansible_hostname }}]
      body: Please reboot the machine - {{ ansible_hostname }}
    delegate_to: localhost
    when: reboot_required_file.stat.exists == true
